events {  }

http {
  proxy_cache_path /var/cache/nginx_static/ levels=1:2 keys_zone=static:32m max_size=1g;

  upstream static {
    server 127.0.0.1:8080;
  }

  map $request_uri $cache_key {
    ~*^.*/(.*)$ static_$1;
    default     "";
  }

  server {
    listen 80;

    location /i/ {
      rewrite ^/i/(.*)$ /$1 break;
  
      proxy_pass http://static;
      proxy_cache static;
      proxy_cache_min_uses 2;
      proxy_cache_valid 200 302 1h;
      proxy_cache_key $cache_key;
      add_header X-Cache-Status $upstream_cache_status;
    }

    location /purge/ {
      content_by_lua_block {
        local purge = require('resty.purge')
        local purger = purge:new("/var/cache/nginx_static/","1:2")
        local ok,err = purger:purge(ngx.var.cache_key)
        if ok then
          ngx.exit(ngx.HTTP_OK)
        else
          ngx.exit(ngx.HTTP_NOT_FOUND)
        end
      }
    }
  }

  # static file server
  server {
    listen 8080;

    location / {
      root /data/static/;
    }
  }
}
